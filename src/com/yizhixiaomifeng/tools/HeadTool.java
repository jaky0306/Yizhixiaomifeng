package com.yizhixiaomifeng.tools;

import com.avos.avoscloud.AVFile;
import com.avos.avoscloud.LogUtil.log;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.PorterDuffXfermode;
import android.graphics.RectF;
import android.graphics.Bitmap.Config;
import android.graphics.PorterDuff.Mode;

public class HeadTool {
	
	public static Bitmap haveHead() {
		Bitmap bitmap = BitmapFactory
				.decodeFile("data/data/com.yizhixiaomifeng/files/head.jpg");
		return bitmap;
	}
	
	public static void saveHead(String username){
		try{
			AVFile file = AVFile.withAbsoluteLocalPath(username, "data/data/com.yizhixiaomifeng/files/head.jpg");
			file.addMetaData("type", "head");
			file.saveInBackground();
		}catch(Exception  e){
			log.e("avfile error",e.toString());
		}
		//{"_checksum":"beeca77717bdaae48f77b7ddb27f0e78","_name":"head.jpg","owner":"","phone":"13265025645","size":80510,"type":"head"}
		
	}
	
	
	/**
	 * 返回圆形的bitmap
	 * @param bitmap
	 * @return
	 */
	public static Bitmap toRoundBitmap(Bitmap bitmap) {  
        //圆形图片宽高  
        int width = bitmap.getWidth();  
        int height = bitmap.getHeight();  
        //正方形的边长  
        int r = 0;  
        //取最短边做边长  
        if(width > height) {  
            r = height;  
        } else {  
            r = width;  
        }  
        //构建一个bitmap  
        Bitmap backgroundBmp = Bitmap.createBitmap(width,  
                 height, Config.ARGB_8888);  
        //new一个Canvas，在backgroundBmp上画图  
        Canvas canvas = new Canvas(backgroundBmp);  
        Paint paint = new Paint();  
        //设置边缘光滑，去掉锯齿  
        paint.setAntiAlias(true);  
        //宽高相等，即正方形  
        RectF rect = new RectF(0, 0, r, r);  
        //通过制定的rect画一个圆角矩形，当圆角X轴方向的半径等于Y轴方向的半径时，  
        //且都等于r/2时，画出来的圆角矩形就是圆形  
        canvas.drawRoundRect(rect, r/2, r/2, paint);  
        //设置当两个图形相交时的模式，SRC_IN为取SRC图形相交的部分，多余的将被去掉  
        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));  
        //canvas将bitmap画在backgroundBmp上  
        canvas.drawBitmap(bitmap, null, rect, paint);  
        //返回已经绘画好的backgroundBmp  
        return backgroundBmp;  
    }
}
